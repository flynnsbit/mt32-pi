From 5bc33c66eb4875852f4ebf750ee16107b23e1bfb Mon Sep 17 00:00:00 2001
From: Rene Stange <rsta2@o2online.de>
Date: Fri, 26 Mar 2021 07:42:19 +0100
Subject: [PATCH] Move defines for DMA controller to dmacommon.h

---
 include/circle/dmacommon.h | 49 +++++++++++++++++++++++++++++++++++++-
 lib/dmachannel.cpp         | 45 +---------------------------------
 lib/i2ssoundbasedevice.cpp | 48 +------------------------------------
 lib/pwmsoundbasedevice.cpp | 48 +------------------------------------
 4 files changed, 51 insertions(+), 139 deletions(-)

diff --git a/include/circle/dmacommon.h b/include/circle/dmacommon.h
index f50a74dc..56599352 100644
--- a/include/circle/dmacommon.h
+++ b/include/circle/dmacommon.h
@@ -2,7 +2,7 @@
 /// \file dmacommon.h
 //
 // Circle - A C++ bare metal environment for Raspberry Pi
-// Copyright (C) 2014-2020  R. Stange <rsta2@o2online.de>
+// Copyright (C) 2014-2021  R. Stange <rsta2@o2online.de>
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -20,6 +20,7 @@
 #ifndef _circle_dmacommon_h
 #define _circle_dmacommon_h
 
+#include <circle/bcm2835.h>
 #include <circle/types.h>
 
 enum TDREQ
@@ -40,4 +41,50 @@ enum TDREQ
 
 typedef void TDMACompletionRoutine (unsigned nChannel, boolean bStatus, void *pParam);
 
+//
+// Legacy platform DMA controller
+//
+#define ARM_DMACHAN_CS(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x00)
+	#define CS_RESET			(1 << 31)
+	#define CS_ABORT			(1 << 30)
+	#define CS_WAIT_FOR_OUTSTANDING_WRITES	(1 << 28)
+	#define CS_PANIC_PRIORITY_SHIFT		20
+		#define DEFAULT_PANIC_PRIORITY		15
+	#define CS_PRIORITY_SHIFT		16
+		#define DEFAULT_PRIORITY		1
+	#define CS_ERROR			(1 << 8)
+	#define CS_INT				(1 << 2)
+	#define CS_END				(1 << 1)
+	#define CS_ACTIVE			(1 << 0)
+#define ARM_DMACHAN_CONBLK_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x04)
+#define ARM_DMACHAN_TI(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x08)
+	#define TI_PERMAP_SHIFT			16
+	#define TI_BURST_LENGTH_SHIFT		12
+		#define DEFAULT_BURST_LENGTH		0
+	#define TI_SRC_IGNORE			(1 << 11)
+	#define TI_SRC_DREQ			(1 << 10)
+	#define TI_SRC_WIDTH			(1 << 9)
+	#define TI_SRC_INC			(1 << 8)
+	#define TI_DEST_DREQ			(1 << 6)
+	#define TI_DEST_WIDTH			(1 << 5)
+	#define TI_DEST_INC			(1 << 4)
+	#define TI_WAIT_RESP			(1 << 3)
+	#define TI_TDMODE			(1 << 1)
+	#define TI_INTEN			(1 << 0)
+#define ARM_DMACHAN_SOURCE_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x0C)
+#define ARM_DMACHAN_DEST_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x10)
+#define ARM_DMACHAN_TXFR_LEN(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x14)
+	#define TXFR_LEN_XLENGTH_SHIFT		0
+	#define TXFR_LEN_YLENGTH_SHIFT		16
+	#define TXFR_LEN_MAX			0x3FFFFFFF
+	#define TXFR_LEN_MAX_LITE		0xFFFF
+#define ARM_DMACHAN_STRIDE(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x18)
+	#define STRIDE_SRC_SHIFT		0
+	#define STRIDE_DEST_SHIFT		16
+#define ARM_DMACHAN_NEXTCONBK(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x1C)
+#define ARM_DMACHAN_DEBUG(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x20)
+	#define DEBUG_LITE			(1 << 28)
+#define ARM_DMA_INT_STATUS		(ARM_DMA_BASE + 0xFE0)
+#define ARM_DMA_ENABLE			(ARM_DMA_BASE + 0xFF0)
+
 #endif
diff --git a/lib/dmachannel.cpp b/lib/dmachannel.cpp
index ed79f676..4edccdab 100644
--- a/lib/dmachannel.cpp
+++ b/lib/dmachannel.cpp
@@ -2,7 +2,7 @@
 // dmachannel.cpp
 //
 // Circle - A C++ bare metal environment for Raspberry Pi
-// Copyright (C) 2014-2020  R. Stange <rsta2@o2online.de>
+// Copyright (C) 2014-2021  R. Stange <rsta2@o2online.de>
 // 
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -28,49 +28,6 @@
 
 #define DMA_CHANNELS			(DMA_CHANNEL_MAX + 1)
 
-#define ARM_DMACHAN_CS(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x00)
-	#define CS_RESET			(1 << 31)
-	#define CS_ABORT			(1 << 30)
-	#define CS_WAIT_FOR_OUTSTANDING_WRITES	(1 << 28)
-	#define CS_PANIC_PRIORITY_SHIFT		20
-		#define DEFAULT_PANIC_PRIORITY		15
-	#define CS_PRIORITY_SHIFT		16
-		#define DEFAULT_PRIORITY		1
-	#define CS_ERROR			(1 << 8)
-	#define CS_INT				(1 << 2)
-	#define CS_END				(1 << 1)
-	#define CS_ACTIVE			(1 << 0)
-#define ARM_DMACHAN_CONBLK_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x04)
-#define ARM_DMACHAN_TI(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x08)
-	#define TI_PERMAP_SHIFT			16
-	#define TI_BURST_LENGTH_SHIFT		12
-		#define DEFAULT_BURST_LENGTH		0
-	#define TI_SRC_IGNORE			(1 << 11)
-	#define TI_SRC_DREQ			(1 << 10)
-	#define TI_SRC_WIDTH			(1 << 9)
-	#define TI_SRC_INC			(1 << 8)
-	#define TI_DEST_DREQ			(1 << 6)
-	#define TI_DEST_WIDTH			(1 << 5)
-	#define TI_DEST_INC			(1 << 4)
-	#define TI_WAIT_RESP			(1 << 3)
-	#define TI_TDMODE			(1 << 1)
-	#define TI_INTEN			(1 << 0)
-#define ARM_DMACHAN_SOURCE_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x0C)
-#define ARM_DMACHAN_DEST_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x10)
-#define ARM_DMACHAN_TXFR_LEN(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x14)
-	#define TXFR_LEN_XLENGTH_SHIFT		0
-	#define TXFR_LEN_YLENGTH_SHIFT		16
-	#define TXFR_LEN_MAX			0x3FFFFFFF
-	#define TXFR_LEN_MAX_LITE		0xFFFF
-#define ARM_DMACHAN_STRIDE(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x18)
-	#define STRIDE_SRC_SHIFT		0
-	#define STRIDE_DEST_SHIFT		16
-#define ARM_DMACHAN_NEXTCONBK(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x1C)
-#define ARM_DMACHAN_DEBUG(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x20)
-	#define DEBUG_LITE			(1 << 28)
-#define ARM_DMA_INT_STATUS		(ARM_DMA_BASE + 0xFE0)
-#define ARM_DMA_ENABLE			(ARM_DMA_BASE + 0xFF0)
-
 CDMAChannel::CDMAChannel (unsigned nChannel, CInterruptSystem *pInterruptSystem)
 :	m_nChannel (CMachineInfo::Get ()->AllocateDMAChannel (nChannel)),
 	m_pControlBlockBuffer (0),
diff --git a/lib/i2ssoundbasedevice.cpp b/lib/i2ssoundbasedevice.cpp
index c6057922..ba6014b3 100644
--- a/lib/i2ssoundbasedevice.cpp
+++ b/lib/i2ssoundbasedevice.cpp
@@ -11,7 +11,7 @@
 //	https://www.raspberrypi.org/forums/viewtopic.php?f=44&t=8496
 //
 // Circle - A C++ bare metal environment for Raspberry Pi
-// Copyright (C) 2016-2020  R. Stange <rsta2@o2online.de>
+// Copyright (C) 2016-2021  R. Stange <rsta2@o2online.de>
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -77,52 +77,6 @@
 #define DREQ_A_TX__SHIFT	8
 #define DREQ_A_TX__MASK		(0x7F << 8)
 
-//
-// DMA controller
-//
-#define ARM_DMACHAN_CS(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x00)
-	#define CS_RESET			(1 << 31)
-	#define CS_ABORT			(1 << 30)
-	#define CS_WAIT_FOR_OUTSTANDING_WRITES	(1 << 28)
-	#define CS_PANIC_PRIORITY_SHIFT		20
-		#define DEFAULT_PANIC_PRIORITY		15
-	#define CS_PRIORITY_SHIFT		16
-		#define DEFAULT_PRIORITY		1
-	#define CS_ERROR			(1 << 8)
-	#define CS_INT				(1 << 2)
-	#define CS_END				(1 << 1)
-	#define CS_ACTIVE			(1 << 0)
-#define ARM_DMACHAN_CONBLK_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x04)
-#define ARM_DMACHAN_TI(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x08)
-	#define TI_PERMAP_SHIFT			16
-	#define TI_BURST_LENGTH_SHIFT		12
-		#define DEFAULT_BURST_LENGTH		0
-	#define TI_SRC_IGNORE			(1 << 11)
-	#define TI_SRC_DREQ			(1 << 10)
-	#define TI_SRC_WIDTH			(1 << 9)
-	#define TI_SRC_INC			(1 << 8)
-	#define TI_DEST_DREQ			(1 << 6)
-	#define TI_DEST_WIDTH			(1 << 5)
-	#define TI_DEST_INC			(1 << 4)
-	#define TI_WAIT_RESP			(1 << 3)
-	#define TI_TDMODE			(1 << 1)
-	#define TI_INTEN			(1 << 0)
-#define ARM_DMACHAN_SOURCE_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x0C)
-#define ARM_DMACHAN_DEST_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x10)
-#define ARM_DMACHAN_TXFR_LEN(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x14)
-	#define TXFR_LEN_XLENGTH_SHIFT		0
-	#define TXFR_LEN_YLENGTH_SHIFT		16
-	#define TXFR_LEN_MAX			0x3FFFFFFF
-	#define TXFR_LEN_MAX_LITE		0xFFFF
-#define ARM_DMACHAN_STRIDE(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x18)
-	#define STRIDE_SRC_SHIFT		0
-	#define STRIDE_DEST_SHIFT		16
-#define ARM_DMACHAN_NEXTCONBK(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x1C)
-#define ARM_DMACHAN_DEBUG(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x20)
-	#define DEBUG_LITE			(1 << 28)
-#define ARM_DMA_INT_STATUS		(ARM_DMA_BASE + 0xFE0)
-#define ARM_DMA_ENABLE			(ARM_DMA_BASE + 0xFF0)
-
 CI2SSoundBaseDevice::CI2SSoundBaseDevice (CInterruptSystem *pInterrupt,
 					  unsigned	    nSampleRate,
 					  unsigned	    nChunkSize,
diff --git a/lib/pwmsoundbasedevice.cpp b/lib/pwmsoundbasedevice.cpp
index 2f6a42ba..e7e183af 100644
--- a/lib/pwmsoundbasedevice.cpp
+++ b/lib/pwmsoundbasedevice.cpp
@@ -2,7 +2,7 @@
 // pwmsoundbasedevice.cpp
 //
 // Circle - A C++ bare metal environment for Raspberry Pi
-// Copyright (C) 2016-2020  R. Stange <rsta2@o2online.de>
+// Copyright (C) 2016-2021  R. Stange <rsta2@o2online.de>
 //
 // Information to implement PWM sound is from:
 //	"Bare metal sound" by Joeboy (RPi forum)
@@ -101,52 +101,6 @@
 #define ARM_PWM_DMAC_PANIC__SHIFT	8
 #define ARM_PWM_DMAC_ENAB		(1 << 31)
 
-//
-// DMA controller
-//
-#define ARM_DMACHAN_CS(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x00)
-	#define CS_RESET			(1 << 31)
-	#define CS_ABORT			(1 << 30)
-	#define CS_WAIT_FOR_OUTSTANDING_WRITES	(1 << 28)
-	#define CS_PANIC_PRIORITY_SHIFT		20
-		#define DEFAULT_PANIC_PRIORITY		15
-	#define CS_PRIORITY_SHIFT		16
-		#define DEFAULT_PRIORITY		1
-	#define CS_ERROR			(1 << 8)
-	#define CS_INT				(1 << 2)
-	#define CS_END				(1 << 1)
-	#define CS_ACTIVE			(1 << 0)
-#define ARM_DMACHAN_CONBLK_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x04)
-#define ARM_DMACHAN_TI(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x08)
-	#define TI_PERMAP_SHIFT			16
-	#define TI_BURST_LENGTH_SHIFT		12
-		#define DEFAULT_BURST_LENGTH		0
-	#define TI_SRC_IGNORE			(1 << 11)
-	#define TI_SRC_DREQ			(1 << 10)
-	#define TI_SRC_WIDTH			(1 << 9)
-	#define TI_SRC_INC			(1 << 8)
-	#define TI_DEST_DREQ			(1 << 6)
-	#define TI_DEST_WIDTH			(1 << 5)
-	#define TI_DEST_INC			(1 << 4)
-	#define TI_WAIT_RESP			(1 << 3)
-	#define TI_TDMODE			(1 << 1)
-	#define TI_INTEN			(1 << 0)
-#define ARM_DMACHAN_SOURCE_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x0C)
-#define ARM_DMACHAN_DEST_AD(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x10)
-#define ARM_DMACHAN_TXFR_LEN(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x14)
-	#define TXFR_LEN_XLENGTH_SHIFT		0
-	#define TXFR_LEN_YLENGTH_SHIFT		16
-	#define TXFR_LEN_MAX			0x3FFFFFFF
-	#define TXFR_LEN_MAX_LITE		0xFFFF
-#define ARM_DMACHAN_STRIDE(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x18)
-	#define STRIDE_SRC_SHIFT		0
-	#define STRIDE_DEST_SHIFT		16
-#define ARM_DMACHAN_NEXTCONBK(chan)	(ARM_DMA_BASE + ((chan) * 0x100) + 0x1C)
-#define ARM_DMACHAN_DEBUG(chan)		(ARM_DMA_BASE + ((chan) * 0x100) + 0x20)
-	#define DEBUG_LITE			(1 << 28)
-#define ARM_DMA_INT_STATUS		(ARM_DMA_BASE + 0xFE0)
-#define ARM_DMA_ENABLE			(ARM_DMA_BASE + 0xFF0)
-
 CPWMSoundBaseDevice::CPWMSoundBaseDevice (CInterruptSystem *pInterrupt,
 					  unsigned	    nSampleRate,
 					  unsigned	    nChunkSize)
